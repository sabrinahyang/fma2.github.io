<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | fmhub]]></title>
  <link href="http://fma2.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://fma2.github.io/"/>
  <updated>2014-08-23T20:19:12-04:00</updated>
  <id>http://fma2.github.io/</id>
  <author>
    <name><![CDATA[Farheen Malik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[comparing ruby and javascript]]></title>
    <link href="http://fma2.github.io/blog/2014/05/17/wk-4-technical-comparing-ruby-and-javascript/"/>
    <updated>2014-05-17T18:54:01-04:00</updated>
    <id>http://fma2.github.io/blog/2014/05/17/wk-4-technical-comparing-ruby-and-javascript</id>
    <content type="html"><![CDATA[<p>With hopes of better understanding both languages conceptually, I researched Ruby versus Javascript for this weeks&#8217; technical blog. Here are my findings!</p>

<h4>Benefits vs. Drawbacks</h4>

<p>In recent exposure to both languages, I have noticed the following differences:</p>

<h5>How they define functions</h5>

<p>Javascript has two ways of defining functions: function expressions and function declarations.</p>

<p>Ruby has multiple types of functions: blocks, Procs, lambdas. Ruby also has methods and method objects.</p>

<h5>Iterations</h5>

<p>While both languages will have state, condition, and iterator in object iteration there are significant differences.</p>

<p>Javascript only has a few ways to iterate: for loops, array methods.</p>

<p>Ruby has a wealth of methods to use for loops and iterators (while, until, for, #each, #times, upto, downto, each_index). Often, there are abstractions hidden in each of these methods. It is challenging to understand all of these methods as a beginner.</p>

<h5>Attention to syntax</h5>

<p>JavaScript requires much more attention to curly braces, parenthesis, commas, and semicolon. Sometimes problems are caused by simple misplacement of or forgotten punctuation like these rather than larger conceptual problems</p>

<p>Ruby does not demand as much attention to curly braces, parenthesis, etc. It is much more minimalisitic, and it allows one to focus on concepts versus syntax.</p>

<h5>When it is used</h5>

<p>Javascript is more commonly used for front-end,client-side web development</p>

<p>Ruby is used for back-end, server-side web development</p>

<h5>Which one should you pick?</h5>

<p>I think it depends on what you are trying to do, learn, or make. Useful questions to consider at first:</p>

<p>Is it client-side of server-side? Are you a beginner? Would focusing on syntax or concepts be more helpful to you?
Next, check out how both languages rank on Hammer Principle: Programming Languages: JAVASCRIPT VS RUBY! Consider what you&rsquo;re priorities are, check to see if they have been ranked on Hammer Principle, and think about the results. This should get you started on deciding which to pick!</p>

<h5>Check out the code!</h5>

<p>Below are a few examples comparing how to write code for each.<table border="1">
                    <col width="100">
                        <col width="200">
                            <col width="200">
                                <tr>
                                    <th></th>
                                    <th>Ruby
                                        <img src="http://people.csail.mit.edu/aleks/website/arby/ruby_transparent.png" alt="Ruby" style="width: 20%; height: 10%">
                                    </th>
                                    <th>Javascript
                                        <img src="https://lh6.ggpht.com/o4rkqaUwWB65RND-ZC3Nt5PQ07chvCM8mkvCXYhvRob_Qg07cjgaLtGAefZOO8J8zg=w300" alt="JavaScript" style="width: 20%; height: 10%">
                                    </th>
                                </tr>
                                <tr>
                                    <td>
                                        <p>arrays</p>
                                    </td>
                                    <td>
                                        <p>a = [1,2,3]</p>
                                        <p>array iteration with
                                            <small>each</small>:
                                            <br>a.each {|n| puts n}
                                            <br>
                                            <em>or</em>
                                            <br>a.each do |n|
                                            <br>puts n
                                            <br>end
                                        </p>
                                    </td>
                                    <td>
                                        <p>var a = [1,2,3]</p>
                                        <p>array iteration with
                                            <small>each</small>:
                                            <br>a.forEach(function(n)) {
                                            <br>console.log(n);
                                            <br>});
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p>function</p>
                                    </td>
                                    <td>
                                        <p>def method_name (var1, var2)
                                            <br>expr..
                                            <br>end
                                        </p>
                                    </td>
                                    <td>
                                        <p>new Function ([arg1[, arg2[, &hellip;argN]],] functionBody)</p>
                                    </td>
                                </tr>
                                </tr>
                                <tr>
                                    <td>
                                        <p>if .. else statements</p>
                                    </td>
                                    <td>
                                        <p>x=1
                                            <br>if x > 2
                                            <br>puts &ldquo;x is greater than 2&rdquo;
                                            <br>elsif x
                                            &lt;=2 and x!=0<br>puts &ldquo;x is 1&rdquo;
                                                <br>else
                                                <br>puts &ldquo;I can&rsquo;t guess the number&rdquo; end
                                        </p>
                                    </td>
                                    <td>
                                        <p>if (cipher_char === from_char) {
                                            <br>result = result + to_char;
                                            <br>x++;
                                            <br>} else {
                                            <br>result = result + clear_char;
                                            <br>}</p>
                                    </td>
                                </tr>
                </table></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[what is so great about javascript anyway?]]></title>
    <link href="http://fma2.github.io/blog/2014/05/08/wk-3-technical-what-is-so-great-about-javascript-anyway/"/>
    <updated>2014-05-08T18:47:42-04:00</updated>
    <id>http://fma2.github.io/blog/2014/05/08/wk-3-technical-what-is-so-great-about-javascript-anyway</id>
    <content type="html"><![CDATA[<h5>Why is JavaScript so popular in web development?</h5>

<p>JavaScript is popular in web development because it is arguably the best language for the web. Here are the top 4 signs it is the best language for the web&ndash;</p>

<h3>1. It is powerful, supporting both client-side and server-side development&ndash;the latter increasingly so.</h3>

<p><img src="http://www.nuxeo.com/blog/wp-content/uploads/2011/11/111111_contentgeeks_server_side_600.jpg" alt="Javascript is not this" />
(Javascript != above image)</p>

<p>Though Javascript has been around for a long time, previously, JavaScript was limited to front end development&ndash;web pages, User Interfaces and fetching data, etc. With Node.js and Google&rsquo;s V8 JavaScript Engine, this is quickly changing to more server-side development. Effectively, &ldquo;JavaScript is quickly becoming not just the ideal language for the web, but indeed a big composition of the web itself.&rdquo; It continues to show that is a capable language, especially in &ldquo;ever-growing number of cases where asynchronous communications are necessary.&#8221;1</p>

<h3>2. It has the potential to maximize the user experience.</h3>

<p><img src="http://www.luminis.eu/wp-content/uploads/2011/06/UX-Design.png" alt="Heart Website" /></p>

<p>User experience (UX) refers to a person&rsquo;s attitude and behavior towards a product, like a website or application. Apple raised the bar for what is considered acceptable in terms of user experience&ndash;the &ldquo;success and adoption of an app is highly correlated&#8221;2 to this. JavaScript has the potential to deliver the necessary &#8220;rich, dynamic web content&rdquo; 2 that attends to user experience.</p>

<h3>3. It is supported by virtually all browsers and adapts to multiple devices.</h3>

<p><img src="http://www.vanseodesign.com/blog/wp-content/uploads/2011/02/browser-logos-30.jpg" alt="what a mess" /></p>

<p>Effectively, &ldquo;millions of people run browsers that can handle JavaScript&ndash;in some variation or another.&#8221;3 It is standardized across common browsers. Further, most devices&ndash;tablets, e-readers and smart phones&ndash;have javascript language. Javascript is especially useful for devices with Apps.</p>

<h3>4. It is easy to use.</h3>

<p><img src="http://mir.aculo.us/wp-content/uploads/2013/11/doge.jpg" alt="doge loves it too" /></p>

<p>One can add JavaScript to his/her site without &ldquo;having access to a server, compiling programs, or having the browser load a virtual machine.&#8221;3 Running JavaScript is as simple as adding it to a web page and uploading the page. This is significant considering the multitude of user experience features JavaScript can add to a web page. Further, it is easy to pick up because of &#8220;the very flexible nature of the language.&#8221;1</p>

<p>Sources:</p>

<ol>
<li><a href="http://earthintegrate.com/10-reasons-why-javascript-is-the-best-language-for-the-web/">10 Reasons Why JavaScript is the Best Language for the Web</a></li>
<li><a href="http://readwrite.com/2013/08/09/why-javascript-will-become-the-dominant-programming-language-of-the-enterprise#awesm=~oDJ1EsncbCjbYc">Why JavaScript Will Become The Dominant Programming Language Of The Enterprise</a></li>
<li><a href="http://www.oreillynet.com/pub/a/oreilly/web/news/javascript_1299.html">So, What Makes Javascript So Popular?</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
